View(sep)
no_group<-sep %>% group_by(v1)
View(divname)
View(divname)
colnames(sep)<-c("no","name","phone","statue")
no_group<-sep %>% group_by(no)
View(no_group)
View(no_group)
library(stringr)
library(dplyr)
raw <- read.csv("D:/math_rawdata.txt",header=F,encoding = "UTF-8")
sep<-as.data.frame(do.call (rbind, str_split(raw$V1, "/", n=4)))
colnames(sep)<-c("no","name","phone","statue")
View(sep)
View(sep)
length(which(substr(sep$no,3,4)=21 > condition))
length(which(substr(sep$no,3,4)=21))
length(which(substr(sep$no,3,4)==21))
length(which(substr(sep$no,3,4)==21))
length(which(substr(sep$no,3,4)==20))
length(which(substr(sep$no,3,4)==19))
length(which(substr(sep$no,3,4)==18))
length(which(substr(sep$no,3,4)==17))
length(which(substr(sep$no,3,4)==16))
length(which(substr(sep$no,3,4)==21))
length(which(substr(sep$no,3,4)==20))
length(which(substr(sep$no,3,4)==19))
length(which(substr(sep$no,3,4)==18))
length(which(substr(sep$no,3,4)==17))
length(which(substr(sep$no,3,4)==16))
length(which(substr(sep$no,3,4)==21))
length(which(substr(sep$no,3,4)==20))
length(which(substr(sep$no,3,4)==19))
length(which(substr(sep$no,3,4)==18))
length(which(substr(sep$no,3,4)==17))
length(which(substr(sep$no,3,4)==16))
library(stringr)
library(dplyr)
raw <- read.csv("D:/math_rawdata.txt",header=F,encoding = "UTF-8")
sep<-as.data.frame(do.call (rbind, str_split(raw$V1, "/", n=4)))
colnames(sep)<-c("no","name","phone","statue")
length(which(substr(sep$no,3,4)==21))
length(which(substr(sep$no,3,4)==20))
length(which(substr(sep$no,3,4)==19))
length(which(substr(sep$no,3,4)==18))
length(which(substr(sep$no,3,4)==17))
length(which(substr(sep$no,3,4)==16))
error_drop<-filter(sep,length(no)!=8)
View(sep)
View(sep)
error_drop<-filter(sep,length(sep&no)!=8)
error_drop<-filter(sep,length(sep$no)!=8)
error_drop<-se p%>% filter(length(no)!=10)
error_drop<-sep %>% filter(length(no)!=10)
library(dplyr)
error_drop<-sep %>% filter(length(no)!=10)
error_drop
library(dplyr)
raw_data1<-read.csv("D:/math_rawdata.txt",
header=F,
encoding="UTF-8",)
raw_data<-data.frame(gsub(" ","",raw_data1$V1))
colnames(raw_data)<-c("a")
sep<-data.frame(do.call('rbind', strsplit(as.character(raw_data$a), split='/', fixed=T)))
raw_data1<-read.csv("D:/math_rawdata.txt",
header=F,
encoding="UTF-8",)
raw_data<-data.frame(gsub(" ","",raw_data1$V1))
colnames(raw_data)<-c("a")
sep<-data.frame(do.call('rbind', strsplit(as.character(raw_data$a), split='/', fixed=T)))
colnames(sep)<-c("num","name_","phone","statue")
data<-data.frame(paste0(substr(sep$num,3,4),sep$name_,sep=''),
paste0(substr( gsub("-","",sep$phone),1,3),"-",gsub("-","",sep$phone),4,7),"-",gsub("-","",sep$phone),8,11)),
sep$statue,sep$name_,
sep$num)
colnames(data)<-c("num+name","phone","stataue","name","num")
data16<-subset(data,substr(num,3,4)==16)
data<-data.frame(paste0(substr(sep$num,3,4),sep$name_,sep=''),
paste0(substr( gsub("-","",sep$phone),1,3),"-",gsub("-","",sep$phone),4,7),"-",gsub("-","",sep$phone),8,11)),
sep$statue,sep$name_,
sep$num)
colnames(sep)<-c("num","name_","phone","statue")
sep<-data.frame(do.call('rbind', strsplit(as.character(raw_data$a), split='/', fixed=T)))
colnames(sep)<-c("num","name_","phone","statue")
data<-data.frame(paste0(substr(sep$num,3,4),sep$name_,sep=''),
paste0(substr( gsub("-","",sep$phone),1,3),"-",gsub("-","",sep$phone),4,7),"-",gsub("-","",sep$phone),8,11)),
sep$statue,sep$name_,
sep$num)
data<-data.frame(paste0(substr(sep$num,3,4),sep$name_,sep=''),paste0(substr( gsub("-","",sep$phone),1,3),"-",gsub("-","",sep$phone),4,7),"-",gsub("-","",sep$phone),8,11)),sep$statue,sep$name_,sep$num)
data<-data.frame(paste0(substr(sep$num,3,4),sep$name_,sep=''),paste0(substr( gsub("-","",sep$phone),1,3),"-",gsub("-","",sep$phone),4,7),"-",gsub("-","",sep$phone),8,11)),sep$statue,sep$name_,sep$num)
data<-data.frame(
paste0(substr(sep$num,3,4),sep$name_,sep=''),
paste0(substr( gsub("-","",sep$phone),1,3),"-",gsub("-","",sep$phone),4,7,"-",gsub("-","",sep$phone),8,11),sep$statue,sep$name_,sep$num)
data<-data.frame( paste0(substr(sep$num,3,4),sep$name_,sep=''),
paste0(substr(gsub("-","",sep$phone),1,3),"-",gsub("-","",sep$phone),4,7,"-",gsub("-","",sep$phone),8,11),
sep$statue,
sep$name_,
sep$num)
colnames(data)<-c("num+name","phone","stataue","name","num")
data16<-subset(data,substr(num,3,4)==16)
data17<-subset(data,substr(num,3,4)==17)
data18<-subset(data,substr(num,3,4)==18)
data19<-subset(data,substr(num,3,4)==19)
data20<-subset(data,substr(num,3,4)==20)
data21<-subset(data,substr(num,3,4)==21)
data_error<-subset(data,substr(num,3,4)!=21 &
substr(num,3,4)!=20 &
substr(num,3,4)!=19 &
substr(num,3,4)!=18 &
substr(num,3,4)!=17 &
substr(num,3,4)!=16)
raw_data1<-read.csv("D:/math_rawdata.txt",
header=F,
encoding="UTF-8",)
raw_data2<-data.frame(gsub(" ","",raw_data1$V1))
raw_data<-data.frame(gsub("-","",raw_data2$gsub..........raw_data1.V1.))
colnames(raw_data)<-c("a")
sep<-data.frame(do.call('rbind', strsplit(as.character(raw_data$a), split='/', fixed=T)))
colnames(sep)<-c("num","name_","phone","statue")
data<-data.frame( paste0(substr(sep$num,3,4),sep$name_,sep=''),
paste0(substr(sep$phone,1,3),"-",substr(sep$phone,4,7),"-",substr(sep$phone,8,11)),
sep$statue,
sep$name_,
sep$num)
colnames(data)<-c("num+name","phone","stataue","name","num")
data16<-subset(data,substr(num,3,4)==16)
data17<-subset(data,substr(num,3,4)==17)
data18<-subset(data,substr(num,3,4)==18)
data19<-subset(data,substr(num,3,4)==19)
data20<-subset(data,substr(num,3,4)==20)
data21<-subset(data,substr(num,3,4)==21)
data_error<-subset(data,substr(num,3,4)!=21 &
substr(num,3,4)!=20 &
substr(num,3,4)!=19 &
substr(num,3,4)!=18 &
substr(num,3,4)!=17 &
substr(num,3,4)!=16)
colnames(data)<-c("학번이름","전화번호","재학상태","이름","학번")
View(error_drop)
View(error_drop)
raw_data1<-read.csv("D:/math_rawdata.txt",
header=F,
encoding="UTF-8",)
raw_data2<-data.frame(gsub(" ","",raw_data1$V1))
raw_data<-data.frame(gsub("-","",raw_data2$gsub..........raw_data1.V1.))
colnames(raw_data)<-c("a")
sep<-data.frame(do.call('rbind', strsplit(as.character(raw_data$a), split='/', fixed=T)))
colnames(sep)<-c("num","name_","phone","statue")
data<-data.frame( paste0(substr(sep$num,3,4),sep$name_,sep=''),
paste0(substr(sep$phone,1,3),"-",substr(sep$phone,4,7),"-",substr(sep$phone,8,11)),
sep$statue,
sep$name_,
sep$num)
colnames(data)<-c("num+name","phone","stataue","name","num")
data16<-subset(data,substr(num,3,4)==16)
data17<-subset(data,substr(num,3,4)==17)
data18<-subset(data,substr(num,3,4)==18)
data19<-subset(data,substr(num,3,4)==19)
data20<-subset(data,substr(num,3,4)==20)
data21<-subset(data,substr(num,3,4)==21)
data_error<-subset(data,substr(num,3,4)!=21 &
substr(num,3,4)!=20 &
substr(num,3,4)!=19 &
substr(num,3,4)!=18 &
substr(num,3,4)!=17 &
substr(num,3,4)!=16)
colnames(data)<-c("학번이름","전화번호","재학상태","이름","학번")
raw_data1<-read.csv("D:/math_rawdata.txt",
header=F,
encoding="UTF-8",)
raw_data2<-data.frame(gsub(" ","",raw_data1$V1))
raw_data<-data.frame(gsub("-","",raw_data2$gsub..........raw_data1.V1.))
colnames(raw_data)<-c("a")
sep<-data.frame(do.call('rbind', strsplit(as.character(raw_data$a), split='/', fixed=T)))
colnames(sep)<-c("num","name_","phone","statue")
data<-data.frame( paste0(substr(sep$num,3,4),sep$name_,sep=''),
paste0(substr(sep$phone,1,3),"-",substr(sep$phone,4,7),"-",substr(sep$phone,8,11)),
sep$statue,
sep$name_,
sep$num)
colnames(data)<-c("num+name","phone","stataue","name","num")
data16<-subset(data,substr(num,3,4)==16)
data17<-subset(data,substr(num,3,4)==17)
data18<-subset(data,substr(num,3,4)==18)
data19<-subset(data,substr(num,3,4)==19)
data20<-subset(data,substr(num,3,4)==20)
data21<-subset(data,substr(num,3,4)==21)
data_error<-subset(data,substr(num,3,4)!=21 &
substr(num,3,4)!=20 &
substr(num,3,4)!=19 &
substr(num,3,4)!=18 &
substr(num,3,4)!=17 &
substr(num,3,4)!=16)
colnames(data)<-c("학번이름","전화번호","재학상태","이름","학번")
raw_data1<-read.csv("D:/math_rawdata.txt",
header=F,
encoding="UTF-8",)
raw_data1<-read.csv("D:/math_rawdata.txt",
header=F,
encoding="UTF-8",)
raw_data2<-data.frame(gsub(" ","",raw_data1$V1))
raw_data<-data.frame(gsub("-","",raw_data2$gsub..........raw_data1.V1.))
colnames(raw_data)<-c("a")
sep<-data.frame(do.call('rbind', strsplit(as.character(raw_data$a), split='/', fixed=T)))
colnames(sep)<-c("num","name_","phone","statue")
data<-data.frame( paste0(substr(sep$num,3,4),sep$name_,sep=''),
paste0(substr(sep$phone,1,3),"-",substr(sep$phone,4,7),"-",substr(sep$phone,8,11)),
sep$statue,
sep$name_,
sep$num)
colnames(data)<-c("num+name","phone","stataue","name","num")
data16<-subset(data,substr(num,3,4)==16)
data17<-subset(data,substr(num,3,4)==17)
data18<-subset(data,substr(num,3,4)==18)
data19<-subset(data,substr(num,3,4)==19)
data20<-subset(data,substr(num,3,4)==20)
data21<-subset(data,substr(num,3,4)==21)
data_error<-subset(data,substr(num,3,4)!=21 &
substr(num,3,4)!=20 &
substr(num,3,4)!=19 &
substr(num,3,4)!=18 &
substr(num,3,4)!=17 &
substr(num,3,4)!=16)
colnames(data)<-c("학번이름","전화번호","재학상태","이름","학번")
raw_data1<-read.csv("D:/math_rawdata.txt",
header=F,
encoding="UTF-8",)
raw_data2<-data.frame(gsub(" ","",raw_data1$V1))
raw_data<-data.frame(gsub("-","",raw_data2$gsub..........raw_data1.V1.))
colnames(raw_data)<-c("a")
sep<-data.frame(do.call('rbind', strsplit(as.character(raw_data$a), split='/', fixed=T)))
colnames(sep)<-c("num","name_","phone","statue")
data<-data.frame( paste0(substr(sep$num,3,4),sep$name_,sep=''),
paste0(substr(sep$phone,1,3),"-",substr(sep$phone,4,7),"-",substr(sep$phone,8,11)),
sep$statue,
sep$name_,
sep$num)
colnames(data)<-c("num+name","phone","stataue","name","num")
data16<-subset(data,substr(num,3,4)==16)
data17<-subset(data,substr(num,3,4)==17)
data18<-subset(data,substr(num,3,4)==18)
data19<-subset(data,substr(num,3,4)==19)
data20<-subset(data,substr(num,3,4)==20)
data21<-subset(data,substr(num,3,4)==21)
data_error<-subset(data,substr(num,3,4)!=21 &
substr(num,3,4)!=20 &
substr(num,3,4)!=19 &
substr(num,3,4)!=18 &
substr(num,3,4)!=17 &
substr(num,3,4)!=16)
colnames(data)<-c("학번이름","전화번호","재학상태","이름","학번")
library(dplyr)
raw_data1<-read.csv("D:/math_rawdata.txt",
header=F,
encoding="UTF-8",)
raw_data2<-data.frame(gsub(" ","",raw_data1$V1))
raw_data<-data.frame(gsub("-","",raw_data2$gsub..........raw_data1.V1.))
colnames(raw_data)<-c("a")
sep<-data.frame(do.call('rbind', strsplit(as.character(raw_data$a), split='/', fixed=T)))
colnames(sep)<-c("num","name_","phone","statue")
data<-data.frame( paste0(substr(sep$num,3,4),sep$name_,sep=''),
paste0(substr(sep$phone,1,3),"-",substr(sep$phone,4,7),"-",substr(sep$phone,8,11)),
sep$statue,
sep$name_,
sep$num)
colnames(data)<-c("num+name","phone","stataue","name","num")
data16<-subset(data,substr(num,3,4)==16)
data17<-subset(data,substr(num,3,4)==17)
data18<-subset(data,substr(num,3,4)==18)
data19<-subset(data,substr(num,3,4)==19)
data20<-subset(data,substr(num,3,4)==20)
data21<-subset(data,substr(num,3,4)==21)
data_error<-subset(data,substr(num,3,4)!=21 &
substr(num,3,4)!=20 &
substr(num,3,4)!=19 &
substr(num,3,4)!=18 &
substr(num,3,4)!=17 &
substr(num,3,4)!=16)
colnames(data)<-c("학번이름","전화번호","재학상태","이름","학번")
install.packages("writexl")
library(writexl)
library(dplyr)
install.packages("dplyr")
install.packages("forecast")
library(forecast)
data <- read.csv("C:/finaltest.csv")
Y <- ts(data)
plot.ts(Y)
diff1_Y <- diff(Y, differences = 1)
library(forecast)
data <- read.csv("C:/finaltest.csv")
Y <- ts(data)
plot.ts(Y)
diff1_Y <- diff(Y, differences = 1)
plot.ts(diff1_Y)
diff12_Y <- diff(diff1_Y, lag = 12)
plot.ts(diff12_Y)
par(mfrow=c(2,1))
acf(diff12_Y, main = "ACF")
pacf(diff12_Y, main = "PACF")
fit1 <- arima(Y, c(1, 1, 1), seasonal = list(order = c(1, 1, 0), period = 12))
fit2 <- arima(Y, c(0, 1, 1), seasonal = list(order = c(1, 1, 0), period = 12))
fit3 <- arima(Y, c(2, 1, 1), seasonal = list(order = c(1, 1, 0), period = 12))
fit1
fit2
install.packages("forecast")
install.packages("forecast")
install.packages("forecast")
library(forecast)
data <- read.csv("C:/finaltest.csv")
# 4. 모형 확정 및 예측 (예측값 17개 출력하기)
diff12_Y.forecasts <- forecast(fit2, h = 12)
library(forecast)
# 경로 설정
# data가 있는 directory
path = "D:/git/tobigs_personal/220223_session_5/Time-Series/[투빅스 17기 정규세션] 5주차 Time-Series_16기 이예림/과제"
setwd(path)
print(getwd())
# 데이터 불러오기
data <- read.csv("kingage.csv")
class(data)
head(data)
nrow(data)
Y <- ts(data) # to timeseries
is.ts(Y)      # True
plot.ts(Y)    # 정상성을 만족하지 않아보입니다.
# 따라서 차분을 통하여 정상시계열로 바꿔줍니다.
# 차분을 1회만 진행하고 간격을 1과 12 두가지를 사용합니다.
diff1_Y <- diff(Y, differences = 1, lag = 1)
plot.ts(diff1_Y)
diff12_Y <- diff(diff1_Y, differences = 1, lag = 12)
plot.ts(diff12_Y)
# 1. 모형 식별
# acf와 pacf를 확인하여  ARIMA모형의 상수를 정합니다.
par(mfrow=c(2,1))     # 한번에 확인하기 위함.
acf(diff12_Y, main = "ACF")
pacf(diff12_Y, main = "PACF")
# 2. 모수 추정
fit1 <- arima(diff12_Y, c(3, 1, 1), seasonal = list(order = c(1, 1, 0), period = 12))
fit2 <- arima(diff12_Y, c(3, 1, 0), seasonal = list(order = c(1, 1, 0), period = 12))
fit3 <- arima(diff12_Y, c(2, 1, 0), seasonal = list(order = c(1, 1, 0), period = 12))
fit1
fit2
fit3
# 3. 모형 적합성 진단
tsdiag(fit1)
# 4. 모형 확정 및 예측 (예측값 17개 출력하기)
diff12_Y.forecasts <- forecast(fit2, h = 12)
diff12_Y.forecasts
# 3. 모형 적합성 진단
tsdiag(fit1)
# 4. 모형 확정 및 예측 (예측값 17개 출력하기)
diff12_Y.forecasts <- forecast(fit1, n = 17)
diff12_Y.forecasts
plot(diff12_Y.forecasts)
plot(diff12_Y.forecasts)
library(forecast)
# 경로 설정
# data가 있는 directory
path = "D:/git/tobigs_personal/220223_session_5/Time-Series/[투빅스 17기 정규세션] 5주차 Time-Series_16기 이예림/과제"
setwd(path)
print(getwd())
# 데이터 불러오기
data <- read.csv("kingage.csv")
class(data)
head(data)
nrow(data)
Y <- ts(data) # to timeseries
is.ts(Y)      # True
plot.ts(Y)    # 정상성을 만족하지 않아보입니다.
# 따라서 차분을 통하여 정상시계열로 바꿔줍니다.
# 차분을 1회만 진행하고 간격을 1과 12 두가지를 사용합니다.
diff1_Y <- diff(Y, differences = 1, lag = 1)
plot.ts(diff1_Y)
diff12_Y <- diff(diff1_Y, differences = 1, lag = 12)
plot.ts(diff12_Y)
# 1. 모형 식별
# acf와 pacf를 확인하여  ARIMA모형의 상수를 정합니다.
par(mfrow=c(2,1))     # 한번에 확인하기 위함.
acf(diff12_Y, main = "ACF")
pacf(diff12_Y, main = "PACF")
# 2. 모수 추정
fit1 <- arima(diff12_Y, c(3, 1, 1), seasonal = list(order = c(1, 1, 0), period = 12))
fit2 <- arima(diff12_Y, c(3, 1, 0), seasonal = list(order = c(1, 1, 0), period = 12))
fit3 <- arima(diff12_Y, c(2, 1, 0), seasonal = list(order = c(1, 1, 0), period = 12))
fit1
fit2
fit3
# 3. 모형 적합성 진단
tsdiag(fit1)
# 4. 모형 확정 및 예측 (예측값 17개 출력하기)
diff12_Y.forecasts <- forecast(fit2, h = 12)
diff12_Y.forecasts
plot(diff12_Y.forecasts)
# 4. 모형 확정 및 예측 (예측값 17개 출력하기)
diff12_Y.forecasts <- forecast(fit2, h = 17)
diff12_Y.forecasts
plot(diff12_Y.forecasts)
# 2. 모수 추정
fit1 <- arima(diff12_Y, c(3, 1, 1), seasonal = list(order = c(1, 1, 0), period = 12))
fit2 <- arima(diff12_Y, c(3, 1, 0), seasonal = list(order = c(1, 1, 0), period = 12))
fit3 <- arima(diff12_Y, c(2, 1, 0), seasonal = list(order = c(1, 1, 0), period = 12))
fit1
fit2
fit3
acf(diff1_Y, main = "ACF")
pacf(diff1_Y, main = "PACF")
# 패키지 설치
#install.packages("forecast")
library(forecast)
# 경로 설정
# data가 있는 directory
path = "D:/git/tobigs_personal/220223_session_5/Time-Series/[투빅스 17기 정규세션] 5주차 Time-Series_16기 이예림/과제"
setwd(path)
print(getwd())
# 데이터 불러오기
data <- read.csv("kingage.csv")
class(data)
head(data)
nrow(data)
Y <- ts(data) # to timeseries
is.ts(Y)      # True
plot.ts(Y)    # 정상성을 만족하지 않아보입니다.
# 따라서 차분을 통하여 정상시계열로 바꿔줍니다.
# 차분을 1회만 진행하고 간격을 1과 12 두가지를 사용합니다.
diff1_Y <- diff(Y, differences = 1, lag = 1)
plot.ts(diff1_Y)
diff12_Y <- diff(diff1_Y, differences = 1, lag = 12)
plot.ts(diff12_Y)
# 1. 모형 식별
# acf와 pacf를 확인하여  ARIMA모형의 상수를 정합니다.
par(mfrow=c(2,1))     # 한번에 확인하기 위함.
acf(diff12_Y, main = "ACF")
pacf(diff12_Y, main = "PACF")
# 2. 모수 추정
fit1 <- arima(diff12_Y, c(3, 1, 1), seasonal = list(order = c(1, 1, 0), period = 12))
fit2 <- arima(diff12_Y, c(3, 1, 0), seasonal = list(order = c(1, 1, 0), period = 12))
fit3 <- arima(diff12_Y, c(2, 1, 0), seasonal = list(order = c(1, 1, 0), period = 12))
fit1
fit2
fit3
# 3. 모형 적합성 진단
tsdiag(fit1)
# 4. 모형 확정 및 예측 (예측값 17개 출력하기)
diff12_Y.forecasts <- forecast(fit2, h = 17)
diff12_Y.forecasts
plot(diff12_Y.forecasts)
# > diff12_Y.forecasts
# > diff12_Y.forecasts
# Point Forecast       Lo 80       Hi 80       Lo 95      Hi 95
# > diff12_Y.forecasts
# Point Forecast       Lo 80       Hi 80       Lo 95      Hi 95
# 43     -11.222145 -31.6913432   9.2470541  -42.527082  20.082793
# > diff12_Y.forecasts
# Point Forecast       Lo 80       Hi 80       Lo 95      Hi 95
# 43     -11.222145 -31.6913432   9.2470541  -42.527082  20.082793
# 44      19.889239  -0.5804468  40.3589251  -11.416444  51.194922
# > diff12_Y.forecasts
# Point Forecast       Lo 80       Hi 80       Lo 95      Hi 95
# 43     -11.222145 -31.6913432   9.2470541  -42.527082  20.082793
# 44      19.889239  -0.5804468  40.3589251  -11.416444  51.194922
# 45     -28.974325 -49.5337020  -8.4149481  -60.417179   2.468529
# > diff12_Y.forecasts
# Point Forecast       Lo 80       Hi 80       Lo 95      Hi 95
# 43     -11.222145 -31.6913432   9.2470541  -42.527082  20.082793
# 44      19.889239  -0.5804468  40.3589251  -11.416444  51.194922
# 45     -28.974325 -49.5337020  -8.4149481  -60.417179   2.468529
# 46      11.859851  -9.7027760  33.4224775  -21.117341  44.837043
# > diff12_Y.forecasts
# Point Forecast       Lo 80       Hi 80       Lo 95      Hi 95
# 43     -11.222145 -31.6913432   9.2470541  -42.527082  20.082793
# 44      19.889239  -0.5804468  40.3589251  -11.416444  51.194922
# 45     -28.974325 -49.5337020  -8.4149481  -60.417179   2.468529
# 46      11.859851  -9.7027760  33.4224775  -21.117341  44.837043
# 47      -3.169953 -30.0143600  23.6744531  -44.224930  37.885024
# > diff12_Y.forecasts
# Point Forecast       Lo 80       Hi 80       Lo 95      Hi 95
# 43     -11.222145 -31.6913432   9.2470541  -42.527082  20.082793
# 44      19.889239  -0.5804468  40.3589251  -11.416444  51.194922
# 45     -28.974325 -49.5337020  -8.4149481  -60.417179   2.468529
# 46      11.859851  -9.7027760  33.4224775  -21.117341  44.837043
# 47      -3.169953 -30.0143600  23.6744531  -44.224930  37.885024
# 48      49.640299  22.7771825  76.5034162    8.556707  90.723891
# > diff12_Y.forecasts
# Point Forecast       Lo 80       Hi 80       Lo 95      Hi 95
# 43     -11.222145 -31.6913432   9.2470541  -42.527082  20.082793
# 44      19.889239  -0.5804468  40.3589251  -11.416444  51.194922
# 45     -28.974325 -49.5337020  -8.4149481  -60.417179   2.468529
# 46      11.859851  -9.7027760  33.4224775  -21.117341  44.837043
# 47      -3.169953 -30.0143600  23.6744531  -44.224930  37.885024
# 48      49.640299  22.7771825  76.5034162    8.556707  90.723891
# 49     -26.077526 -52.9559340   0.8008826  -67.184504  15.029452
# > diff12_Y.forecasts
# Point Forecast       Lo 80       Hi 80       Lo 95      Hi 95
# 43     -11.222145 -31.6913432   9.2470541  -42.527082  20.082793
# 44      19.889239  -0.5804468  40.3589251  -11.416444  51.194922
# 45     -28.974325 -49.5337020  -8.4149481  -60.417179   2.468529
# 46      11.859851  -9.7027760  33.4224775  -21.117341  44.837043
# 47      -3.169953 -30.0143600  23.6744531  -44.224930  37.885024
# 48      49.640299  22.7771825  76.5034162    8.556707  90.723891
# 49     -26.077526 -52.9559340   0.8008826  -67.184504  15.029452
# 50     -10.169660 -38.9109288  18.5716081  -54.125637  33.786317
# Point Forecast       Lo 80       Hi 80       Lo 95      Hi 95
# 43     -11.222145 -31.6913432   9.2470541  -42.527082  20.082793
# 44      19.889239  -0.5804468  40.3589251  -11.416444  51.194922
# 45     -28.974325 -49.5337020  -8.4149481  -60.417179   2.468529
# 46      11.859851  -9.7027760  33.4224775  -21.117341  44.837043
# 47      -3.169953 -30.0143600  23.6744531  -44.224930  37.885024
# 48      49.640299  22.7771825  76.5034162    8.556707  90.723891
# 49     -26.077526 -52.9559340   0.8008826  -67.184504  15.029452
# 50     -10.169660 -38.9109288  18.5716081  -54.125637  33.786317
# 51      14.597723 -16.5927865  45.7882319  -33.104045  62.299490
