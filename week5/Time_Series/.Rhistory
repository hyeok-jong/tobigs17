raw <- read.csv("D:/math_rawdata.txt",fileEncoding = "CP949",encoding = 'UTF-8')
raw <- read.csv("D:/math_rawdata.txt",fileEncoding = "CP949",encoding = 'UTF-8')
raw <- read.csv("D:/math_rawdata.txt",encoding = 'UTF-8')
View(raw)
View(raw)
raw <- read.csv("D:/math_rawdata.txt",header=F,encoding = 'UTF-8')
raw <- read.csv("D:/math_rawdata.txt",header=F)
raw <- read.csv("D:/math_rawdata.txt",header=F,sep="/")
raw <- read.csv("D:/math_rawdata.txt",header=F)
View(raw)
View(raw)
raw <- read.csv("D:/math_rawdata.txt",header=F,encoding = "UFT-8")
View(raw)
View(raw)
8
raw <- read.csv("D:/math_rawdata.txt",header=F,encoding = "UFT-8")
View(raw)
raw <- read.csv("D:/math_rawdata.txt",header=F,encoding = "UFT-8")
View(raw)
View(raw)
raw <- read.csv("D:/math_rawdata.txt",header=F,encoding = "UFT-8")
View(raw)
View(raw)
raw <- read.csv("D:/math_rawdata.txt",header=F,encoding = "UFT-8")
View(raw)
View(raw)
raw <- read.csv("D:/math_rawdata.txt",header=F,encoding = "UFT-8")
View(raw)
View(raw)
raw <- read.csv("D:/math_rawdata.txt",header=F,encoding = "UFT-8")
View(raw)
View(raw)
raw <- read.csv("D:/math_rawdata.txt",header=F,encoding = "UTF-8")
View(raw)
View(raw)
View(raw)
View(raw)
aa<-raw$V1
divname<-as.data.frame(do.call (rbind, str_split(raw$V1, "/", n=3)))
library(stringr)
raw <- read.csv("D:/math_rawdata.txt",header=F,encoding = "UTF-8")
divname<-as.data.frame(do.call (rbind, str_split(raw$V1, "/", n=3)))
View(divname)
View(divname)
divname<-as.data.frame(do.call (rbind, str_split(raw$V1, "/", n=4)))
View(divname)
View(divname)
library(dplyr)
raw <- read.csv("D:/math_rawdata.txt",header=F,encoding = "UTF-8")
divname<-as.data.frame(do.call (rbind, str_split(raw$V1, "/", n=4)))
sep<-as.data.frame(do.call (rbind, str_split(raw$V1, "/", n=4)))
View(sep)
View(sep)
no_group<-sep %>% group_by(v1)
View(divname)
View(divname)
colnames(sep)<-c("no","name","phone","statue")
no_group<-sep %>% group_by(no)
View(no_group)
View(no_group)
library(stringr)
library(dplyr)
raw <- read.csv("D:/math_rawdata.txt",header=F,encoding = "UTF-8")
sep<-as.data.frame(do.call (rbind, str_split(raw$V1, "/", n=4)))
colnames(sep)<-c("no","name","phone","statue")
View(sep)
View(sep)
length(which(substr(sep$no,3,4)=21 > condition))
length(which(substr(sep$no,3,4)=21))
length(which(substr(sep$no,3,4)==21))
length(which(substr(sep$no,3,4)==21))
length(which(substr(sep$no,3,4)==20))
length(which(substr(sep$no,3,4)==19))
length(which(substr(sep$no,3,4)==18))
length(which(substr(sep$no,3,4)==17))
length(which(substr(sep$no,3,4)==16))
length(which(substr(sep$no,3,4)==21))
length(which(substr(sep$no,3,4)==20))
length(which(substr(sep$no,3,4)==19))
length(which(substr(sep$no,3,4)==18))
length(which(substr(sep$no,3,4)==17))
length(which(substr(sep$no,3,4)==16))
length(which(substr(sep$no,3,4)==21))
length(which(substr(sep$no,3,4)==20))
length(which(substr(sep$no,3,4)==19))
length(which(substr(sep$no,3,4)==18))
length(which(substr(sep$no,3,4)==17))
length(which(substr(sep$no,3,4)==16))
library(stringr)
library(dplyr)
raw <- read.csv("D:/math_rawdata.txt",header=F,encoding = "UTF-8")
sep<-as.data.frame(do.call (rbind, str_split(raw$V1, "/", n=4)))
colnames(sep)<-c("no","name","phone","statue")
length(which(substr(sep$no,3,4)==21))
length(which(substr(sep$no,3,4)==20))
length(which(substr(sep$no,3,4)==19))
length(which(substr(sep$no,3,4)==18))
length(which(substr(sep$no,3,4)==17))
length(which(substr(sep$no,3,4)==16))
error_drop<-filter(sep,length(no)!=8)
View(sep)
View(sep)
error_drop<-filter(sep,length(sep&no)!=8)
error_drop<-filter(sep,length(sep$no)!=8)
error_drop<-se p%>% filter(length(no)!=10)
error_drop<-sep %>% filter(length(no)!=10)
library(dplyr)
error_drop<-sep %>% filter(length(no)!=10)
error_drop
library(dplyr)
raw_data1<-read.csv("D:/math_rawdata.txt",
header=F,
encoding="UTF-8",)
raw_data<-data.frame(gsub(" ","",raw_data1$V1))
colnames(raw_data)<-c("a")
sep<-data.frame(do.call('rbind', strsplit(as.character(raw_data$a), split='/', fixed=T)))
raw_data1<-read.csv("D:/math_rawdata.txt",
header=F,
encoding="UTF-8",)
raw_data<-data.frame(gsub(" ","",raw_data1$V1))
colnames(raw_data)<-c("a")
sep<-data.frame(do.call('rbind', strsplit(as.character(raw_data$a), split='/', fixed=T)))
colnames(sep)<-c("num","name_","phone","statue")
data<-data.frame(paste0(substr(sep$num,3,4),sep$name_,sep=''),
paste0(substr( gsub("-","",sep$phone),1,3),"-",gsub("-","",sep$phone),4,7),"-",gsub("-","",sep$phone),8,11)),
sep$statue,sep$name_,
sep$num)
colnames(data)<-c("num+name","phone","stataue","name","num")
data16<-subset(data,substr(num,3,4)==16)
data<-data.frame(paste0(substr(sep$num,3,4),sep$name_,sep=''),
paste0(substr( gsub("-","",sep$phone),1,3),"-",gsub("-","",sep$phone),4,7),"-",gsub("-","",sep$phone),8,11)),
sep$statue,sep$name_,
sep$num)
colnames(sep)<-c("num","name_","phone","statue")
sep<-data.frame(do.call('rbind', strsplit(as.character(raw_data$a), split='/', fixed=T)))
colnames(sep)<-c("num","name_","phone","statue")
data<-data.frame(paste0(substr(sep$num,3,4),sep$name_,sep=''),
paste0(substr( gsub("-","",sep$phone),1,3),"-",gsub("-","",sep$phone),4,7),"-",gsub("-","",sep$phone),8,11)),
sep$statue,sep$name_,
sep$num)
data<-data.frame(paste0(substr(sep$num,3,4),sep$name_,sep=''),paste0(substr( gsub("-","",sep$phone),1,3),"-",gsub("-","",sep$phone),4,7),"-",gsub("-","",sep$phone),8,11)),sep$statue,sep$name_,sep$num)
data<-data.frame(paste0(substr(sep$num,3,4),sep$name_,sep=''),paste0(substr( gsub("-","",sep$phone),1,3),"-",gsub("-","",sep$phone),4,7),"-",gsub("-","",sep$phone),8,11)),sep$statue,sep$name_,sep$num)
data<-data.frame(
paste0(substr(sep$num,3,4),sep$name_,sep=''),
paste0(substr( gsub("-","",sep$phone),1,3),"-",gsub("-","",sep$phone),4,7,"-",gsub("-","",sep$phone),8,11),sep$statue,sep$name_,sep$num)
data<-data.frame( paste0(substr(sep$num,3,4),sep$name_,sep=''),
paste0(substr(gsub("-","",sep$phone),1,3),"-",gsub("-","",sep$phone),4,7,"-",gsub("-","",sep$phone),8,11),
sep$statue,
sep$name_,
sep$num)
colnames(data)<-c("num+name","phone","stataue","name","num")
data16<-subset(data,substr(num,3,4)==16)
data17<-subset(data,substr(num,3,4)==17)
data18<-subset(data,substr(num,3,4)==18)
data19<-subset(data,substr(num,3,4)==19)
data20<-subset(data,substr(num,3,4)==20)
data21<-subset(data,substr(num,3,4)==21)
data_error<-subset(data,substr(num,3,4)!=21 &
substr(num,3,4)!=20 &
substr(num,3,4)!=19 &
substr(num,3,4)!=18 &
substr(num,3,4)!=17 &
substr(num,3,4)!=16)
raw_data1<-read.csv("D:/math_rawdata.txt",
header=F,
encoding="UTF-8",)
raw_data2<-data.frame(gsub(" ","",raw_data1$V1))
raw_data<-data.frame(gsub("-","",raw_data2$gsub..........raw_data1.V1.))
colnames(raw_data)<-c("a")
sep<-data.frame(do.call('rbind', strsplit(as.character(raw_data$a), split='/', fixed=T)))
colnames(sep)<-c("num","name_","phone","statue")
data<-data.frame( paste0(substr(sep$num,3,4),sep$name_,sep=''),
paste0(substr(sep$phone,1,3),"-",substr(sep$phone,4,7),"-",substr(sep$phone,8,11)),
sep$statue,
sep$name_,
sep$num)
colnames(data)<-c("num+name","phone","stataue","name","num")
data16<-subset(data,substr(num,3,4)==16)
data17<-subset(data,substr(num,3,4)==17)
data18<-subset(data,substr(num,3,4)==18)
data19<-subset(data,substr(num,3,4)==19)
data20<-subset(data,substr(num,3,4)==20)
data21<-subset(data,substr(num,3,4)==21)
data_error<-subset(data,substr(num,3,4)!=21 &
substr(num,3,4)!=20 &
substr(num,3,4)!=19 &
substr(num,3,4)!=18 &
substr(num,3,4)!=17 &
substr(num,3,4)!=16)
colnames(data)<-c("학번이름","전화번호","재학상태","이름","학번")
View(error_drop)
View(error_drop)
raw_data1<-read.csv("D:/math_rawdata.txt",
header=F,
encoding="UTF-8",)
raw_data2<-data.frame(gsub(" ","",raw_data1$V1))
raw_data<-data.frame(gsub("-","",raw_data2$gsub..........raw_data1.V1.))
colnames(raw_data)<-c("a")
sep<-data.frame(do.call('rbind', strsplit(as.character(raw_data$a), split='/', fixed=T)))
colnames(sep)<-c("num","name_","phone","statue")
data<-data.frame( paste0(substr(sep$num,3,4),sep$name_,sep=''),
paste0(substr(sep$phone,1,3),"-",substr(sep$phone,4,7),"-",substr(sep$phone,8,11)),
sep$statue,
sep$name_,
sep$num)
colnames(data)<-c("num+name","phone","stataue","name","num")
data16<-subset(data,substr(num,3,4)==16)
data17<-subset(data,substr(num,3,4)==17)
data18<-subset(data,substr(num,3,4)==18)
data19<-subset(data,substr(num,3,4)==19)
data20<-subset(data,substr(num,3,4)==20)
data21<-subset(data,substr(num,3,4)==21)
data_error<-subset(data,substr(num,3,4)!=21 &
substr(num,3,4)!=20 &
substr(num,3,4)!=19 &
substr(num,3,4)!=18 &
substr(num,3,4)!=17 &
substr(num,3,4)!=16)
colnames(data)<-c("학번이름","전화번호","재학상태","이름","학번")
raw_data1<-read.csv("D:/math_rawdata.txt",
header=F,
encoding="UTF-8",)
raw_data2<-data.frame(gsub(" ","",raw_data1$V1))
raw_data<-data.frame(gsub("-","",raw_data2$gsub..........raw_data1.V1.))
colnames(raw_data)<-c("a")
sep<-data.frame(do.call('rbind', strsplit(as.character(raw_data$a), split='/', fixed=T)))
colnames(sep)<-c("num","name_","phone","statue")
data<-data.frame( paste0(substr(sep$num,3,4),sep$name_,sep=''),
paste0(substr(sep$phone,1,3),"-",substr(sep$phone,4,7),"-",substr(sep$phone,8,11)),
sep$statue,
sep$name_,
sep$num)
colnames(data)<-c("num+name","phone","stataue","name","num")
data16<-subset(data,substr(num,3,4)==16)
data17<-subset(data,substr(num,3,4)==17)
data18<-subset(data,substr(num,3,4)==18)
data19<-subset(data,substr(num,3,4)==19)
data20<-subset(data,substr(num,3,4)==20)
data21<-subset(data,substr(num,3,4)==21)
data_error<-subset(data,substr(num,3,4)!=21 &
substr(num,3,4)!=20 &
substr(num,3,4)!=19 &
substr(num,3,4)!=18 &
substr(num,3,4)!=17 &
substr(num,3,4)!=16)
colnames(data)<-c("학번이름","전화번호","재학상태","이름","학번")
raw_data1<-read.csv("D:/math_rawdata.txt",
header=F,
encoding="UTF-8",)
raw_data1<-read.csv("D:/math_rawdata.txt",
header=F,
encoding="UTF-8",)
raw_data2<-data.frame(gsub(" ","",raw_data1$V1))
raw_data<-data.frame(gsub("-","",raw_data2$gsub..........raw_data1.V1.))
colnames(raw_data)<-c("a")
sep<-data.frame(do.call('rbind', strsplit(as.character(raw_data$a), split='/', fixed=T)))
colnames(sep)<-c("num","name_","phone","statue")
data<-data.frame( paste0(substr(sep$num,3,4),sep$name_,sep=''),
paste0(substr(sep$phone,1,3),"-",substr(sep$phone,4,7),"-",substr(sep$phone,8,11)),
sep$statue,
sep$name_,
sep$num)
colnames(data)<-c("num+name","phone","stataue","name","num")
data16<-subset(data,substr(num,3,4)==16)
data17<-subset(data,substr(num,3,4)==17)
data18<-subset(data,substr(num,3,4)==18)
data19<-subset(data,substr(num,3,4)==19)
data20<-subset(data,substr(num,3,4)==20)
data21<-subset(data,substr(num,3,4)==21)
data_error<-subset(data,substr(num,3,4)!=21 &
substr(num,3,4)!=20 &
substr(num,3,4)!=19 &
substr(num,3,4)!=18 &
substr(num,3,4)!=17 &
substr(num,3,4)!=16)
colnames(data)<-c("학번이름","전화번호","재학상태","이름","학번")
raw_data1<-read.csv("D:/math_rawdata.txt",
header=F,
encoding="UTF-8",)
raw_data2<-data.frame(gsub(" ","",raw_data1$V1))
raw_data<-data.frame(gsub("-","",raw_data2$gsub..........raw_data1.V1.))
colnames(raw_data)<-c("a")
sep<-data.frame(do.call('rbind', strsplit(as.character(raw_data$a), split='/', fixed=T)))
colnames(sep)<-c("num","name_","phone","statue")
data<-data.frame( paste0(substr(sep$num,3,4),sep$name_,sep=''),
paste0(substr(sep$phone,1,3),"-",substr(sep$phone,4,7),"-",substr(sep$phone,8,11)),
sep$statue,
sep$name_,
sep$num)
colnames(data)<-c("num+name","phone","stataue","name","num")
data16<-subset(data,substr(num,3,4)==16)
data17<-subset(data,substr(num,3,4)==17)
data18<-subset(data,substr(num,3,4)==18)
data19<-subset(data,substr(num,3,4)==19)
data20<-subset(data,substr(num,3,4)==20)
data21<-subset(data,substr(num,3,4)==21)
data_error<-subset(data,substr(num,3,4)!=21 &
substr(num,3,4)!=20 &
substr(num,3,4)!=19 &
substr(num,3,4)!=18 &
substr(num,3,4)!=17 &
substr(num,3,4)!=16)
colnames(data)<-c("학번이름","전화번호","재학상태","이름","학번")
library(dplyr)
raw_data1<-read.csv("D:/math_rawdata.txt",
header=F,
encoding="UTF-8",)
raw_data2<-data.frame(gsub(" ","",raw_data1$V1))
raw_data<-data.frame(gsub("-","",raw_data2$gsub..........raw_data1.V1.))
colnames(raw_data)<-c("a")
sep<-data.frame(do.call('rbind', strsplit(as.character(raw_data$a), split='/', fixed=T)))
colnames(sep)<-c("num","name_","phone","statue")
data<-data.frame( paste0(substr(sep$num,3,4),sep$name_,sep=''),
paste0(substr(sep$phone,1,3),"-",substr(sep$phone,4,7),"-",substr(sep$phone,8,11)),
sep$statue,
sep$name_,
sep$num)
colnames(data)<-c("num+name","phone","stataue","name","num")
data16<-subset(data,substr(num,3,4)==16)
data17<-subset(data,substr(num,3,4)==17)
data18<-subset(data,substr(num,3,4)==18)
data19<-subset(data,substr(num,3,4)==19)
data20<-subset(data,substr(num,3,4)==20)
data21<-subset(data,substr(num,3,4)==21)
data_error<-subset(data,substr(num,3,4)!=21 &
substr(num,3,4)!=20 &
substr(num,3,4)!=19 &
substr(num,3,4)!=18 &
substr(num,3,4)!=17 &
substr(num,3,4)!=16)
colnames(data)<-c("학번이름","전화번호","재학상태","이름","학번")
install.packages("writexl")
library(writexl)
library(dplyr)
install.packages("dplyr")
# 패키지 설치
install.packages("forecast")
library(forecast)
# 경로 설정
getwd()
path = "D:/git/tobigs_personal/220223_session_5/Time-Series/[투빅스 17기 정규세션] 5주차 Time-Series_16기 이예림/과제"
setwd(path)
print(getwd())
# 데이터 불러오기
data <- read.csv("C:/finaltest.csv")
# 데이터 불러오기
data <- read.csv("finaltest.csv")
# 데이터 불러오기
data <- read.csv("./finaltest.csv")
# 데이터 불러오기
data <- read.csv("/finaltest.csv")
# 데이터 불러오기
file = file.path(path,"finaltest.csv")
# 데이터 불러오기
file <- file.path(path,"finaltest.csv")
data <- read.csv(file)
data <- read.csv("kingage.csv")
# 패키지 설치
install.packages("forecast")
library(forecast)
library(forecast)
# 경로 설정
# data가 있는 directory
path = "D:/git/tobigs_personal/220223_session_5/Time-Series/[투빅스 17기 정규세션] 5주차 Time-Series_16기 이예림/과제"
setwd(path)
print(getwd())
# 데이터 불러오기
data <- read.csv("kingage.csv")
data
type(data)
data.type()
class(data)
data.len()
data.haed(3)
data.head(3)
data.head()
head(data)
lengh(data)
length(data)
nrow(data)
# data.frame 형식의 총 42개의 정수로 이루어진 data입니다.
Y <- ts(data)
# data.frame 형식의 총 42개의 정수로 이루어진 data입니다.
is.ts(data)
is.ts(Y)
t <- ts(data) # to timeseries
is.ts(t)
Y <- ts(data) # to timeseries
is.ts(Y)
plot.ts(Y)
diff_1 <- diff(Y, differences = 1)
plot.ts(diff_1)
plot.ts(Y)
# 따라서 차분을 통하여 정상시계열로 바꿔줍니다.
diff_1 <- diff(Y, differences = 1)
plot.ts(diff_1)
# 따라서 차분을 통하여 정상시계열로 바꿔줍니다.
diff1_Y <- diff(Y, differences = 1)
plot.ts(diff1_Y)
diff12_Y <- diff(diff1_Y, lag = 12)
plot.ts(diff12_Y)
diff12_Y <- diff(diff1_Y, lag = 17)
plot.ts(diff12_Y)
plot.ts(diff1_Y)
# 따라서 차분을 통하여 정상시계열로 바꿔줍니다.
diff1_Y <- diff(Y, differences = 2)
plot.ts(diff1_Y)
# 따라서 차분을 통하여 정상시계열로 바꿔줍니다.
diff1_Y <- diff(Y, differences = 1)
plot.ts(diff1_Y)
# 따라서 차분을 통하여 정상시계열로 바꿔줍니다.
diff1_Y <- diff(Y, differences = 2)
plot.ts(diff1_Y)
# 따라서 차분을 통하여 정상시계열로 바꿔줍니다.
diff1_Y <- diff(Y, differences = 22)
plot.ts(diff1_Y)
# 따라서 차분을 통하여 정상시계열로 바꿔줍니다.
diff1_Y <- diff(Y, differences = 202)
plot.ts(diff1_Y)
# 따라서 차분을 통하여 정상시계열로 바꿔줍니다.
diff1_Y <- diff(Y, differences = 32)
plot.ts(diff1_Y)
# 따라서 차분을 통하여 정상시계열로 바꿔줍니다.
diff1_Y <- diff(Y, differences = 1)
plot.ts(diff1_Y)
# 따라서 차분을 통하여 정상시계열로 바꿔줍니다.
diff1_Y <- diff(Y, differences = 1, lag = 1)
plot.ts(diff1_Y)
plot.ts(diff12_Y)
diff12_Y <- diff(diff1_Y, differences = 1, lag = 17)
plot.ts(diff12_Y)
diff12_Y <- diff(diff1_Y, differences = 1, lag = 12)
plot.ts(diff12_Y)
par(mfrow=c(2,1))
# acf와 pacf를 확인하여 모형의 상수를 정합니다.
acf(diff12_Y, main = "ACF")
pacf(diff12_Y, main = "PACF")
# 2. 모수 추정
fit1 <- arima(Y, c(3, 1, 1), seasonal = list(order = c(1, 1, 0), period = 12))
fit2 <- arima(Y, c(1, 1, 3), seasonal = list(order = c(1, 1, 0), period = 12))
fit3 <- arima(Y, c(2, 1, 1), seasonal = list(order = c(1, 1, 0), period = 12))
fit1
fit2
fit3
# 2. 모수 추정
fit1 <- arima(Y, c(3, 1, 1), seasonal = list(order = c(1, 1, 0), period = 12))
fit2 <- arima(Y, c(1, 1, 3), seasonal = list(order = c(1, 1, 0), period = 12))
fit3 <- arima(Y, c(0, 1, 3), seasonal = list(order = c(1, 1, 0), period = 12))
fit1
fit2
fit3
# 2. 모수 추정
fit1 <- arima(Y, c(3, 1, 1), seasonal = list(order = c(1, 1, 0), period = 12))
fit2 <- arima(Y, c(1, 1, 3), seasonal = list(order = c(1, 1, 0), period = 12))
fit3 <- arima(Y, c(0, 1, 3), seasonal = list(order = c(1, 1, 0), period = 12))
fit1
fit2
fit3
fit3 <- arima(Y, c(3, 1, 0), seasonal = list(order = c(1, 1, 0), period = 12))
fit1
fit2
fit3
# 2. 모수 추정
fit1 <- arima(Y, c(3, 1, 1), seasonal = list(order = c(1, 1, 0), period = 12))
fit2 <- arima(Y, c(3, 1, 0), seasonal = list(order = c(1, 1, 0), period = 12))
fit3 <- arima(Y, c(2, 1, 0), seasonal = list(order = c(1, 1, 0), period = 12))
fit1
fit2
fit3
fit2
# 3. 모형 적합성 진단
tsdiag(fit2)
# 4. 모형 확정 및 예측 (예측값 17개 출력하기)
diff12_Y.forecasts <- forecast(fit2, h = 12)
diff12_Y.forecasts
plot(diff12_Y.forecasts)
diff12_Y <- diff(diff1_Y, differences = 1, lag = 17)
plot.ts(diff12_Y)
# 1. 모형 식별
# acf와 pacf를 확인하여  ARIMA모형의 상수를 정합니다.
par(mfrow=c(2,1))     # 한번에 확인하기 위함.
acf(diff12_Y, main = "ACF")
pacf(diff12_Y, main = "PACF")
# 2. 모수 추정
fit1 <- arima(Y, c(3, 1, 1), seasonal = list(order = c(1, 1, 0), period = 12))
fit2 <- arima(Y, c(3, 1, 0), seasonal = list(order = c(1, 1, 0), period = 12))
fit3 <- arima(Y, c(2, 1, 0), seasonal = list(order = c(1, 1, 0), period = 12))
fit1
fit2
diff12_Y <- diff(diff1_Y, differences = 1, lag = 12)
plot.ts(diff12_Y)
# 1. 모형 식별
# acf와 pacf를 확인하여  ARIMA모형의 상수를 정합니다.
par(mfrow=c(2,1))     # 한번에 확인하기 위함.
acf(diff12_Y, main = "ACF")
pacf(diff12_Y, main = "PACF")
# 2. 모수 추정
fit1 <- arima(diff12_Y, c(3, 1, 1), seasonal = list(order = c(1, 1, 0), period = 12))
fit2 <- arima(diff12_Y, c(3, 1, 0), seasonal = list(order = c(1, 1, 0), period = 12))
fit3 <- arima(diff12_Y, c(2, 1, 0), seasonal = list(order = c(1, 1, 0), period = 12))
fit1
fit2
fit3
fit1
fit2
fit3
# 3. 모형 적합성 진단
tsdiag(fit1)
# 4. 모형 확정 및 예측 (예측값 17개 출력하기)
diff12_Y.forecasts <- forecast(fit2, h = 12)
diff12_Y.forecasts
plot(diff12_Y.forecasts)
